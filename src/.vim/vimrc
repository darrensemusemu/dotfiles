packadd! onedark.vim


"Use 24-bit (true-color) mode in Vim/Neovim when outside tmux.
"If you're using tmux version 2.2 or later, you can remove the outermost $TMUX check and use tmux's 24-bit color support
"(see < http://sunaku.github.io/tmux-24bit-color.html#usage > for more information.)
if (empty($TMUX))
  if (has("nvim"))
    "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  endif
  "For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
  "Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
  " < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
  if (has("termguicolors"))
    set termguicolors
  endif
endif


" Leader Key <Space>
nnoremap <SPACE> <Nop>
let mapleader=" "


" Create 'tags' file (may need to install ctags first)
" Enables:
" - Use ^] to jump to tag under cursor
" - Use g^] for ambious tags
" - Use ^t to jump back up the tag stack
command! MakeTags !ctags -R .


" Enabling filetype support provides filetype-specific indenting,
" syntax highlighting, omni-completion and other useful settings.
filetype plugin indent on
syntax on


" `matchit.vim` is built-in so let's enable it!
" Hit `%` on `if` to jump to `else`.
runtime macros/matchit.vim


"File Browsing
" Enables:
" - :edit a folder to open a file browser
" - <CR>/v/t to open in an h-split/v-split/tab
" - check |netrw-browse-maps| for more mappings
let g:netrw_banner=0        " disable annoying banner
let g:netrw_browse_split=4  " open in prior window
let g:netrw_altv=1          " open splits to the right
let g:netrw_liststyle=3     " tree view
let g:netrw_list_hide=netrw_gitignore#Hide()
let g:netrw_list_hide.=',\(^\|\s\s\)\zs\.\S\+'


" various settings
set autoindent                  " Minimal automatic indenting for any filetype.
set backspace=indent,eol,start  " Intuitive backspace behavior.
set hidden                      " Possibility to have more than one unsaved buffers.
set incsearch                   " Incremental search, hit `<CR>` to stop.
set number relativenumber       " Show lines numners
set nocompatible                " Apologies to vi :(
set regexpengine=0              " Set to automatic. Helps with costly syntac highlighting (especially typescrpt).
set ruler                       " Shows the current line number at the bottom-right of the screen.
set path+=**                    " Search down into sub folder. Provies tab completion for file related tasks. :find & :b
set wildmenu                    " Great command-line completion, use `<Tab>` to move around and `<CR>` to validate.
                                " documented in: ins-completion


" ALE Plugin
"
" Set this variable to 1 to fix files when you save them.
" Enable completion where available.
" This setting must be set before ALE is loaded.
"
" You should not turn this setting on if you wish to use ALE as a completion
" source for other completion plugins, like Deoplete.
" let g:ale_completion_enabled = 1

" Omni-completion function you can use for triggering completion manually with <C-x><C-o>
set omnifunc=ale#completion#OmniFunc

let g:ale_fix_on_save = 1
let g:ale_fixers = {
\   '*': ['trim_whitespace'],
\   'c': ["clang-format"],
\   'cs': ["clang-format"],
\   'go': ["goimports"],
\   'Makefile': ["checkmake"],
\   'md': ["cspell"],
\   'rust': ["rustfmt"],
\}

let g:ale_linters = {
\ 'cs': ['OmniSharp'],
\ 'rust': ['analyzer']
\}


" Use the stdio version of OmniSharp-roslyn - this is the default
let g:OmniSharp_server_stdio = 1
let g:OmniSharp_server_use_net6 = 1

colorscheme onedark " Use onedark.vim colorscheme


" Generating Vim help files
" Put these lines at the very end of your vimrc file.

" Load all plugins now.
" Plugins need to be added to runtimepath before helptags can be generated.
packloadall
" Load all of the helptags now, after plugins have been loaded.
" All messages and errors will be ignored.
silent! helptags ALL


" File type detection
augroup project
  autocmd!
  autocmd BufRead,BufNewFile *.h,*.c set filetype=c " Detect *.h as c files
augroup END
